Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require("react");

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require("react-native");

var _nativeBase = require("native-base");

var routes = ["Home", "BlankPage2"];

var DrawBar = function (_React$Component) {
  babelHelpers.inherits(DrawBar, _React$Component);

  function DrawBar() {
    babelHelpers.classCallCheck(this, DrawBar);
    return babelHelpers.possibleConstructorReturn(this, (DrawBar.__proto__ || Object.getPrototypeOf(DrawBar)).apply(this, arguments));
  }

  babelHelpers.createClass(DrawBar, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      return _react2.default.createElement(
        _nativeBase.Container,
        null,
        _react2.default.createElement(
          _nativeBase.Content,
          null,
          _react2.default.createElement(
            _reactNative.Image,
            {
              source: {
                uri: "https://github.com/GeekyAnts/NativeBase-KitchenSink/raw/react-navigation/img/drawer-cover.png"
              },
              style: {
                height: 120,
                alignSelf: "stretch",
                justifyContent: "center",
                alignItems: "center"
              }
            },
            _react2.default.createElement(
              _reactNative.TouchableOpacity,
              {
                style: {
                  height: 120,
                  alignSelf: "stretch",
                  justifyContent: "center",
                  alignItems: "center"
                },
                onPress: function onPress() {
                  return _this2.props.navigation.navigate("DrawerClose");
                }
              },
              _react2.default.createElement(_reactNative.Image, {
                square: true,
                style: { height: 80, width: 70 },
                source: {
                  uri: "https://github.com/GeekyAnts/NativeBase-KitchenSink/raw/react-navigation/img/logo.png"
                }
              })
            )
          ),
          _react2.default.createElement(_nativeBase.List, {
            dataArray: routes,
            renderRow: function renderRow(data) {
              return _react2.default.createElement(
                _nativeBase.ListItem,
                {
                  button: true,
                  onPress: function onPress() {
                    return _this2.props.navigation.navigate(data);
                  }
                },
                _react2.default.createElement(
                  _nativeBase.Text,
                  null,
                  data
                )
              );
            }
          })
        )
      );
    }
  }]);
  return DrawBar;
}(_react2.default.Component);

DrawBar.navigationOptions = {
  header: null
};
exports.default = DrawBar;