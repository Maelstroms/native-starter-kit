Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require("react");

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require("react-native");

var _reactNativeModalDropdown = require("react-native-modal-dropdown");

var _reactNativeModalDropdown2 = babelHelpers.interopRequireDefault(_reactNativeModalDropdown);

var _reactRedux = require("react-redux");

var _blankPage = require("../blankPage2");

var _blankPage2 = babelHelpers.interopRequireDefault(_blankPage);

var _reactNavigation = require("react-navigation");

var _nativeBase = require("native-base");

var _reactNativeEasyGrid = require("react-native-easy-grid");

var _list = require("../../actions/list");

var _styles = require("./styles");

var _styles2 = babelHelpers.interopRequireDefault(_styles);

var DEMO_OPTIONS_1 = ['option 1', 'option 2', 'option 3', 'option 4', 'option 5', 'option 6', 'option 7', 'option 8', 'option 9'];
var DEMO_OPTIONS_2 = [{ "name": "Rex", "age": 30 }, { "name": "Mary", "age": 25 }, { "name": "John", "age": 41 }, { "name": "Jim", "age": 22 }, { "name": "Susan", "age": 52 }, { "name": "Brent", "age": 33 }, { "name": "Alex", "age": 16 }, { "name": "Ian", "age": 20 }, { "name": "Phil", "age": 24 }];

var Survey = function (_Component) {
  babelHelpers.inherits(Survey, _Component);

  function Survey(props) {
    babelHelpers.classCallCheck(this, Survey);

    var _this = babelHelpers.possibleConstructorReturn(this, (Survey.__proto__ || Object.getPrototypeOf(Survey)).call(this, props));

    _this.state = { text: 'Useless Placeholder',
      dropdownSelection: '-- Choose --'
    };
    return _this;
  }

  babelHelpers.createClass(Survey, [{
    key: "_dropdown_2_renderRow",
    value: function _dropdown_2_renderRow(rowData, rowID, highlighted) {
      var icon = highlighted ? require('../../../images/heart.png') : require('../../../images/flower.png');
      var evenRow = rowID % 2;
      return _react2.default.createElement(
        _reactNative.TouchableHighlight,
        { underlayColor: "cornflowerblue" },
        _react2.default.createElement(
          _nativeBase.View,
          { style: [_styles2.default.dropdown_2_row, { backgroundColor: evenRow ? 'lemonchiffon' : 'white' }] },
          _react2.default.createElement(_reactNative.Image, { style: _styles2.default.dropdown_2_image,
            mode: "stretch",
            source: icon }),
          _react2.default.createElement(
            _nativeBase.Text,
            { style: [_styles2.default.dropdown_2_row_text, highlighted && { color: 'mediumaquamarine' }] },
            rowData.name + " (" + rowData.age + ")"
          )
        )
      );
    }
  }, {
    key: "_dropdown_2_renderSeparator",
    value: function _dropdown_2_renderSeparator(sectionID, rowID, adjacentRowHighlighted) {
      if (rowID == DEMO_OPTIONS_1.length - 1) return;
      var key = "spr_" + rowID;
      return _react2.default.createElement(_nativeBase.View, { style: _styles2.default.dropdown_2_separator,
        key: key });
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      console.log(DrawNav, "786785786");
      console.log('PROPS');
      console.log(this.props);
      console.log('STATE');
      console.log(this.state);
      return _react2.default.createElement(
        _nativeBase.Container,
        null,
        _react2.default.createElement(
          _nativeBase.View,
          { style: _styles2.default.container },
          _react2.default.createElement(
            _nativeBase.Content,
            null,
            _react2.default.createElement(
              _nativeBase.View,
              { style: _styles2.default.bg },
              _react2.default.createElement(_reactNative.TextInput, {
                style: { height: 40, borderColor: 'gray', borderWidth: 1 },
                onChangeText: function onChangeText(text) {
                  return _this2.setState({ text: text });
                },
                value: this.state.text }),
              _react2.default.createElement(
                _nativeBase.Text,
                null,
                "Options"
              ),
              _react2.default.createElement(
                _nativeBase.View,
                null,
                _react2.default.createElement(_reactNativeModalDropdown2.default, { style: _styles2.default.dropdown_2,
                  textStyle: _styles2.default.dropdown_2_text,
                  dropdownStyle: _styles2.default.dropdown_2_dropdown,
                  options: DEMO_OPTIONS_2,
                  renderRow: this._dropdown_2_renderRow.bind(this),
                  renderSeparator: function renderSeparator(sectionID, rowID, adjacentRowHighlighted) {
                    return _this2._dropdown_2_renderSeparator(sectionID, rowID, adjacentRowHighlighted);
                  } })
              ),
              _react2.default.createElement(
                _nativeBase.Text,
                null,
                "Options"
              ),
              _react2.default.createElement(
                _reactNativeEasyGrid.Grid,
                { style: _styles2.default.mt },
                this.props.list.map(function (item, i) {
                  return _react2.default.createElement(
                    _reactNativeEasyGrid.Row,
                    { style: _styles2.default.row, key: i },
                    _react2.default.createElement(
                      _nativeBase.Text,
                      { style: _styles2.default.text },
                      item
                    )
                  );
                })
              ),
              _react2.default.createElement(
                _nativeBase.Button,
                {
                  style: _styles2.default.btn,
                  onPress: function onPress() {
                    return _this2.props.navigation.navigate("Home");
                  } },
                _react2.default.createElement(
                  _nativeBase.Text,
                  null,
                  "Clear"
                )
              ),
              _react2.default.createElement(
                _nativeBase.Button,
                {
                  style: _styles2.default.btn,
                  onPress: function onPress() {
                    return _this2.props.navigation.navigate("Home");
                  } },
                _react2.default.createElement(
                  _nativeBase.Text,
                  null,
                  "Cancel"
                )
              )
            )
          )
        )
      );
    }
  }]);
  return Survey;
}(_react.Component);

Survey.navigationOptions = {
  header: null
};


function bindAction(dispatch) {
  return {
    setIndex: function setIndex(index) {
      return dispatch((0, _list.setIndex)(index));
    }
  };
}

var mapStateToProps = function mapStateToProps(state) {
  return {
    name: state.user.name,
    list: ["Student", "Rotation", "Date Performed", "Prodedure Group", "Prodedure", "Diagnosis Group", "Diagnosis", "Case Location", "Role in Case", "Supervisor", "Patient Type", "Student Comments", "Alternate Experience", "Description of Alternate Experience"]
  };
};

var SurveySwagger = (0, _reactRedux.connect)(mapStateToProps, bindAction)(Survey);
var DrawNav = (0, _reactNavigation.DrawerNavigator)({
  Survey: { screen: SurveySwagger },
  BlankPage2: { screen: _blankPage2.default }
});
var DrawerNav = null;
DrawNav.navigationOptions = function (_ref) {
  var navigation = _ref.navigation;

  DrawerNav = navigation;
  return {
    header: null
  };
};
exports.default = DrawNav;