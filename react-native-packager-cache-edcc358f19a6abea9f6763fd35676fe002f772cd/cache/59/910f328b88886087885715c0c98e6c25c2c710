Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require("react");

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require("react-native");

var _reactNativeMenu = require("react-native-menu");

var _reactNativeMenu2 = babelHelpers.interopRequireDefault(_reactNativeMenu);

var _reactRedux = require("react-redux");

var _blankPage = require("../blankPage2");

var _blankPage2 = babelHelpers.interopRequireDefault(_blankPage);

var _reactNavigation = require("react-navigation");

var _nativeBase = require("native-base");

var _reactNativeEasyGrid = require("react-native-easy-grid");

var _list = require("../../actions/list");

var _styles = require("./styles");

var _styles2 = babelHelpers.interopRequireDefault(_styles);

var Survey = function (_Component) {
  babelHelpers.inherits(Survey, _Component);

  function Survey(props) {
    babelHelpers.classCallCheck(this, Survey);

    var _this = babelHelpers.possibleConstructorReturn(this, (Survey.__proto__ || Object.getPrototypeOf(Survey)).call(this, props));

    _this.state = { text: 'Useless Placeholder',
      dropdownSelection: '-- Choose --' };
    return _this;
  }

  babelHelpers.createClass(Survey, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      console.log(DrawNav, "786785786");
      console.log('PROPS');
      console.log(this.props);
      console.log('STATE');
      console.log(this.state);
      return _react2.default.createElement(
        _nativeBase.Container,
        null,
        _react2.default.createElement(
          _nativeBase.View,
          { style: _styles2.default.container },
          _react2.default.createElement(
            _nativeBase.Content,
            null,
            _react2.default.createElement(
              _nativeBase.View,
              { style: _styles2.default.bg },
              _react2.default.createElement(
                _reactNativeMenu.MenuContext,
                { style: { flex: 1 }, ref: "MenuContext" },
                _react2.default.createElement(_reactNative.TextInput, {
                  style: { height: 40, borderColor: 'gray', borderWidth: 1 },
                  onChangeText: function onChangeText(text) {
                    return _this2.setState({ text: text });
                  },
                  value: this.state.text }),
                _react2.default.createElement(
                  _reactNativeMenu2.default,
                  { style: _styles2.default.dropdown, onSelect: function onSelect(value) {
                      return _this2.setState({ dropdownSelection: value });
                    } },
                  _react2.default.createElement(
                    _reactNativeMenu.MenuTrigger,
                    null,
                    _react2.default.createElement(
                      _nativeBase.Text,
                      null,
                      this.state.dropdownSelection
                    )
                  ),
                  _react2.default.createElement(
                    _reactNativeMenu.MenuOptions,
                    { optionsContainerStyle: _styles2.default.dropdownOptions,
                      renderOptionsContainer: function renderOptionsContainer(options) {
                        return _react2.default.createElement(
                          _reactNative.ScrollView,
                          null,
                          _react2.default.createElement(
                            _nativeBase.Text,
                            null,
                            "CHOOSE SOMETHING...."
                          ),
                          options
                        );
                      } },
                    _react2.default.createElement(
                      _reactNativeMenu.MenuOption,
                      { value: "Option One" },
                      _react2.default.createElement(
                        _nativeBase.Text,
                        null,
                        "Option One"
                      )
                    ),
                    _react2.default.createElement(
                      _reactNativeMenu.MenuOption,
                      { value: "Option Two" },
                      _react2.default.createElement(
                        _nativeBase.Text,
                        null,
                        "Option Two"
                      )
                    ),
                    _react2.default.createElement(
                      _reactNativeMenu.MenuOption,
                      { value: "Option Three" },
                      _react2.default.createElement(
                        _nativeBase.Text,
                        null,
                        "Option Three"
                      )
                    ),
                    _react2.default.createElement(
                      _reactNativeMenu.MenuOption,
                      { value: "Option Four" },
                      _react2.default.createElement(
                        _nativeBase.Text,
                        null,
                        "Option Four"
                      )
                    ),
                    _react2.default.createElement(
                      _reactNativeMenu.MenuOption,
                      { value: "Option Five" },
                      _react2.default.createElement(
                        _nativeBase.Text,
                        null,
                        "Option Five"
                      )
                    )
                  )
                ),
                _react2.default.createElement(_reactNative.TextInput, {
                  style: { height: 40, borderColor: 'gray', borderWidth: 1 },
                  onChangeText: function onChangeText(text) {
                    return _this2.setState({ text: text });
                  },
                  value: this.state.text }),
                _react2.default.createElement(
                  _reactNativeEasyGrid.Grid,
                  { style: _styles2.default.mt },
                  this.props.list.map(function (item, i) {
                    return _react2.default.createElement(
                      _reactNativeEasyGrid.Row,
                      { style: _styles2.default.row, key: i },
                      _react2.default.createElement(
                        _nativeBase.Text,
                        { style: _styles2.default.text },
                        item
                      )
                    );
                  })
                ),
                _react2.default.createElement(
                  _nativeBase.Button,
                  {
                    style: _styles2.default.btn,
                    onPress: function onPress() {
                      return _this2.props.navigation.navigate("Home");
                    } },
                  _react2.default.createElement(
                    _nativeBase.Text,
                    null,
                    "Clear"
                  )
                ),
                _react2.default.createElement(
                  _nativeBase.Button,
                  {
                    style: _styles2.default.btn,
                    onPress: function onPress() {
                      return _this2.props.navigation.navigate("Home");
                    } },
                  _react2.default.createElement(
                    _nativeBase.Text,
                    null,
                    "Cancel"
                  )
                )
              )
            )
          )
        )
      );
    }
  }]);
  return Survey;
}(_react.Component);

Survey.navigationOptions = {
  header: null
};


function bindAction(dispatch) {
  return {
    setIndex: function setIndex(index) {
      return dispatch((0, _list.setIndex)(index));
    }
  };
}

var mapStateToProps = function mapStateToProps(state) {
  return {
    name: state.user.name,
    list: ["Student", "Rotation", "Date Performed", "Prodedure Group", "Prodedure", "Diagnosis Group", "Diagnosis", "Case Location", "Role in Case", "Supervisor", "Patient Type", "Student Comments", "Alternate Experience", "Description of Alternate Experience"]
  };
};

var SurveySwagger = (0, _reactRedux.connect)(mapStateToProps, bindAction)(Survey);
var DrawNav = (0, _reactNavigation.DrawerNavigator)({
  Survey: { screen: SurveySwagger },
  BlankPage2: { screen: _blankPage2.default }
});
var DrawerNav = null;
DrawNav.navigationOptions = function (_ref) {
  var navigation = _ref.navigation;

  DrawerNav = navigation;
  return {
    header: null
  };
};
exports.default = DrawNav;