Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require("react");

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactRedux = require("react-redux");

var _blankPage = require("../blankPage2");

var _blankPage2 = babelHelpers.interopRequireDefault(_blankPage);

var _reactNavigation = require("react-navigation");

var _nativeBase = require("native-base");

var _styles = require("./styles");

var _styles2 = babelHelpers.interopRequireDefault(_styles);

var ForgotPassword = function (_Component) {
  babelHelpers.inherits(ForgotPassword, _Component);

  function ForgotPassword() {
    babelHelpers.classCallCheck(this, ForgotPassword);
    return babelHelpers.possibleConstructorReturn(this, (ForgotPassword.__proto__ || Object.getPrototypeOf(ForgotPassword)).apply(this, arguments));
  }

  babelHelpers.createClass(ForgotPassword, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      return _react2.default.createElement(
        _nativeBase.Container,
        { style: _styles2.default.container },
        _react2.default.createElement(
          _nativeBase.Header,
          null,
          _react2.default.createElement(
            _nativeBase.Left,
            null,
            _react2.default.createElement(
              _nativeBase.Button,
              {
                transparent: true,
                onPress: function onPress() {
                  DrawerNav.dispatch(_reactNavigation.NavigationActions.reset({
                    index: 0,
                    actions: [_reactNavigation.NavigationActions.navigate({ routeName: "Home" })]
                  }));
                  DrawerNav.goBack();
                }
              },
              _react2.default.createElement(_nativeBase.Icon, { active: true, name: "power" })
            )
          ),
          _react2.default.createElement(
            _nativeBase.Body,
            null,
            _react2.default.createElement(
              _nativeBase.Title,
              null,
              "Home"
            )
          ),
          _react2.default.createElement(
            _nativeBase.Right,
            null,
            _react2.default.createElement(
              _nativeBase.Button,
              {
                transparent: true,
                onPress: function onPress() {
                  return DrawerNav.navigate("DrawerOpen");
                }
              },
              _react2.default.createElement(_nativeBase.Icon, { active: true, name: "menu" })
            )
          )
        ),
        _react2.default.createElement(
          _nativeBase.Content,
          null,
          _react2.default.createElement(
            _nativeBase.Text,
            null,
            "Thank you for submitting your feedback. You will receive an email confirmation of the receipt of this survey."
          ),
          _react2.default.createElement(
            _nativeBase.Button,
            {
              style: _styles2.default.btn,
              onPress: function onPress() {
                return _this2.props.navigation.navigate("Home");
              } },
            _react2.default.createElement(
              _nativeBase.Text,
              null,
              "Cancel"
            )
          )
        )
      );
    }
  }]);
  return ForgotPassword;
}(_react.Component);

ForgotPassword.navigationOptions = {
  header: null
};


function bindAction(dispatch) {
  return {
    setIndex: function (_setIndex) {
      function setIndex(_x) {
        return _setIndex.apply(this, arguments);
      }

      setIndex.toString = function () {
        return _setIndex.toString();
      };

      return setIndex;
    }(function (index) {
      return dispatch(setIndex(index));
    }),
    openDrawer: function (_openDrawer) {
      function openDrawer() {
        return _openDrawer.apply(this, arguments);
      }

      openDrawer.toString = function () {
        return _openDrawer.toString();
      };

      return openDrawer;
    }(function () {
      return dispatch(openDrawer());
    })
  };
}

var ForgotPasswordSwagger = (0, _reactRedux.connect)(bindAction)(ForgotPassword);
var DrawNav = (0, _reactNavigation.DrawerNavigator)({
  ForgotPassword: { screen: ForgotPassword },
  BlankPage2: { screen: _blankPage2.default }
});
var DrawerNav = null;
DrawNav.navigationOptions = function (_ref) {
  var navigation = _ref.navigation;

  DrawerNav = navigation;
  return {
    header: null
  };
};
exports.default = DrawNav;